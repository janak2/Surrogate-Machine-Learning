# -*- coding: utf-8 -*-
"""preprocess.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WdOIz0xnfSVU_6ZCiqSYHHe6GxIitIB3
"""

from os import listdir
from os.path import isfile, join
import pandas as pd
import numpy as np

DATA_FOLDER = "/content/drive/MyDrive/Gdrive/startup/Novus Sentry/data/"
COLUMN_NAMES = ["time", "i1", "v1", "i2", "v2", "i3", "v3", "i4", "v4"]

def read_all_files_in_folder_inl(folder_name: str):
  path = DATA_FOLDER + folder_name
  file_list = [join(path, f) for f in listdir(path) if isfile(join(path, f))]
  df_list = []
  for fname in file_list:
    if fname.endswith(".xlsx"):
      print(fname)
      df = pd.read_excel(fname, header=1)
      df = df.dropna(axis=1, how='all')
      df_list.append(df)
  return df_list

def read_all_files_in_folder_v1(folder_name: str):
  path = DATA_FOLDER + folder_name
  file_list = [join(path, f) for f in listdir(path) if isfile(join(path, f))]
  df_list = []
  for fname in file_list:
    if fname.endswith(".csv"):
      print(fname)
      df = pd.read_csv(fname, sep="\t", header=None)
      if len(df.columns) > len(COLUMN_NAMES):
        df = df.drop(df.columns[range(len(COLUMN_NAMES),len(df.columns))], axis=1)
      df.columns = COLUMN_NAMES
      df_list.append(df)
  return df_list

def read_all_files_in_folder_v2(folder_name: str):
  path = DATA_FOLDER + folder_name
  file_list = [join(path, f) for f in listdir(path) if isfile(join(path, f))]
  df_list = []
  for fname in file_list:
    if fname.endswith(".xlsx"):
      print(fname)
      df = pd.read_excel(fname, header=0, sheet_name="Sheet1")
      df = df.dropna(axis=1, how='all')
      df = df.drop(df.columns[1], axis=1)
      df.iloc[:,1] = df.iloc[:,1]/1000.0
      df_list.append(df)
  return df_list

def create_input_output_data(df_list, NUMBER_OF_CHANNELS):
  input_data = []
  output_data = []
  for df in df_list:
    N = len(df.index)
    if N >= 3600:
      for i in range(NUMBER_OF_CHANNELS):
        if df.iloc[:, [i*2+1]].gt(0).all().item():
          continue
        first_negative_current = df.iloc[:, [i*2+1]].lt(0).idxmax().item()
        input = df.iloc[first_negative_current:, [0, i*2+1]]
        input_data.append(input)
        last_valid_index = df.iloc[:, i*2+1].notna()[::-1].idxmax()
        output = float(df.iloc[last_valid_index-300:last_valid_index, [i*2+1]].mean())
        output_data.append(output)
  return input_data, output_data

def preprocess(folder_name: str):
  if "v1" in folder_name:
    x = read_all_files_in_folder_v1(folder_name)
    i,o = create_input_output_data(x, 4)   

  if "v2" in folder_name:
    x = read_all_files_in_folder_v2(folder_name)
    i,o = create_input_output_data(x, 1)   

  if "inl" in folder_name:
    x = read_all_files_in_folder_inl(folder_name)
    i,o = create_input_output_data(x, 5)   
  
  return i,o

if __name__ == "__main__":
  i,o = preprocess("Data_v2")



